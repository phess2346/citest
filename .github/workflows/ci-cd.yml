name: NGINX CI/CD Пайплайн

on:
  push:
    paths: ['index.html']
    branches: [main]
  pull_request:
    paths: ['index.html']
    branches: [main]

jobs:
  test_nginx:
    runs-on: ubuntu-latest
    name: Тестирование NGINX контейнера
    
    steps:
    - name: Получение кода из репозитория
      uses: actions/checkout@v4
    
    - name: Запуск NGINX контейнера
      run: |
        docker run -d --name nginx-test-${{ github.run_id }} \
          -p 9889:80 \
          -v $(pwd)/index.html:/usr/share/nginx/html/index.html \
          nginx:1.21-alpine
        echo " NGINX контейнер запускается..."
        sleep 5
    
    - name: Проверка HTTP кода ответа
      run: |
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9889)
        echo " HTTP код ответа: $HTTP_CODE"
        if [ "$HTTP_CODE" != "200" ]; then
          echo "❌ ОШИБКА: Ожидался код 200, получен $HTTP_CODE"
          exit 1
        fi
        echo "✅ HTTP код ответа корректен"
    
    - name: Сравнение MD5 хешей
      run: |
        LOCAL_MD5=$(md5sum index.html | awk '{print $1}')
        echo " Локальный MD5 файла: $LOCAL_MD5"
        
        REMOTE_MD5=$(curl -s http://localhost:9889 | md5sum | awk '{print $1}')
        echo " Удаленный MD5 контента: $REMOTE_MD5"
        
        if [ "$LOCAL_MD5" != "$REMOTE_MD5" ]; then
          echo "❌ ОШИБКА: MD5 хеши не совпадают!"
          exit 1
        fi
        echo "✅ MD5 хеши совпадают - контент идентичен!"
    
    - name: Очистка контейнеров
      if: always()
      run: |
        echo " Останавливаю и удаляю контейнеры..."
        docker stop nginx-test-${{ github.run_id }} || true
        docker rm nginx-test-${{ github.run_id }} || true
        echo "✅ Контейнеры очищены"

  notify_telegram:
    needs: test_nginx
    runs-on: ubuntu-latest
    if: always()
    name: Отправка уведомления в Telegram
    
    steps:
    - name: Отправка уведомления в Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          ${{ needs.test_nginx.result == 'success' && '✅ CI/CD ПАЙПЛАЙН УСПЕШНО ВЫПОЛНЕН' || '❌ CI/CD ПАЙПЛАЙН ЗАВЕРШИЛСЯ С ОШИБКОЙ' }}
          
           Репозиторий: ${{ github.repository }}
           Ветка: ${{ github.ref_name }}
           Автор: ${{ github.actor }}
           Коммит: ${{ github.event.head_commit.message }}
          
          ${{ needs.test_nginx.result == 'success' && ' Все тесты пройдены! NGINX контейнер работает корректно.' || ' Пайплайн завершился с ошибкой. Пожалуйста, проверьте логи выполнения.' }}
          
           Ссылка на пайплайн: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
           Время: ${{ github.event.head_commit.timestamp }}
        disable_web_page_preview: true
